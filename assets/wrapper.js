var iPerceptions = iPerceptions || {}; iPerceptions.Wrapper = { token: window.iperceptionskey, inviteId: "IPinvite." + window.iperceptionskey, inviteUrl: "//api.iperceptions.com/InviteTriggers", engineId: "IPengine", definitionId: "IPdef." + window.iperceptionskey, device: "", culture: "", sId: "", visits: "", visit: "", engineUrl: "", dataUrl: "", companyId: "", frameUrl: "//universal.iperceptions.com/iFrame.html", iFrameUrl: "//universal.iperceptions.com", frameId: "iPerceptionsFrame", visitsId: "iperceptions.com", init: function () { if (!/MSIE [67]\.(?!.*Trident[1-9])/.test(navigator.userAgent)) try { this.sId = this.setAndGetCookie("ipe_s"), this.visits = JSON.parse(this.getStorageCookie(this.visitsId)); var e = this.getStorageCookie(this.inviteId); e && "null" !== e ? this.store(this.inviteId, e) : this.getJs(this.inviteUrl, this.store, this.inviteId) } catch (t) { try { this.getJs(this.inviteUrl, this.inject, this.inviteId) } catch (t) { } } }, getApiObj: function (e) { if (!e) {window.console && console.warn("iPerceptions Warning: Domain validation does not find " + window.location.hostname);return;} var t = JSON.parse(e); this.device = t.Device, this.culture = t.Culture, this.engineUrl = t.EngineUrl, this.dataUrl = t.DataUrl.replace(/^(https?):\/\//, "//"), void 0 !== this.visits && this.visits && this.visits instanceof Array || (this.visits = []); for (var i = 0; i < this.visits.length; i++) if (this.visits[i].id === this.token) { this.visit = this.visits[i]; break } this.visit = this.visit || {}, this.visit.id = this.token, this.visit.history = this.visit.history || []; var n = this.visit.visitors || []; n.push({ id: t.VisitorId, time: new Date, host: location.host }), this.visit.visitors = n.length <= 10 ? n : n.slice(Math.max(n.length - 10, 1)) }, store: function (e, t) { var i = iPerceptions.Wrapper; i.getApiObj(t), i.setStorageCookie(e, t, null, "session"); var n = sessionStorage.getItem(i.engineId); if (!n) return void i.injectJs(i.engineId, i.engineUrl, null, i.storeEngine, i); iPerceptions.ipEngine = i.stringToObj(n); var s = sessionStorage.getItem(i.definitionId); s ? (ipDef = JSON.parse(s), i.callEngine()) : i.injectJs(i.definitionId, i.dataUrl, null, i.storeDef, i) }, inject: function (e, t) { var i = iPerceptions.Wrapper; try { i.getApiObj(t), i.injectJs(i.engineId, i.engineUrl), i.injectJs(i.definitionId, i.dataUrl, null, i.callEngine) } catch (n) { } }, injectJs: function (e, t, i, n, s) { var o = document.createElement("script"); o.id = e, t && (o.src = t), i && (o.text = i), o.type = "text/javascript"; var r = document.getElementsByTagName("script")[0]; r.parentNode.insertBefore(o, r), void 0 !== n && null !== n && this.afterInjection(o, n, s) }, afterInjection: function (e, t, i) { e.readyState ? e.onreadystatechange = function () { ("loaded" == e.readyState || "complete" == e.readyState) && (e.onreadystatechange = null, t(i)) } : e.onload = function () { t(i) } }, getJs: function (e, t, i) { if (window.XDomainRequest) { var n = new XDomainRequest; n.open("get", e + "?SecurityToken=" + this.token), n.onload = function () { t(i, n.responseText) }, n.send() } else { var s = new XMLHttpRequest; s.open("GET", e, !0), s.setRequestHeader("SecurityToken", this.token), s.onload = function () { t(i, this.response) }, s.send(this.token) } }, storeEngine: function (e) { if (document.addEventListener) try { sessionStorage.setItem(e.engineId, iPerceptions.ipEngine.toJson()) } catch (t) { } e.injectJs(e.definitionId, e.dataUrl, null, e.storeDef, e) }, storeDef: function (e) { try { sessionStorage.setItem(e.definitionId, JSON.stringify(ipDef)) } catch (t) { } e.callEngine() }, callEngine: function () { var self = iPerceptions.Wrapper; if (ipDef) { if (ipDef.CustomInviteScript && ipDef.CustomInviteScript.length > 0 && eval(ipDef.CustomInviteScript), ipDef.IntegrationScript && ipDef.IntegrationScript.length > 0 && eval(ipDef.IntegrationScript), 0 === ipDef.Invites.length) return; self.companyId = ipDef.Invites[0].CompanyId, "object" == typeof iPerceptions.ipEngine ? iPerceptions.ipEngine.launch(ipDef, self.device, self.culture, self.visit, self.sId, self.token) : setTimeout(self.callEngine, 500) } }, getCookie: function (e) { var t, i, n = document.cookie.split(";"); for (t = 0; t < n.length; t += 1) { for (i = n[t]; " " === i.charAt(0) ;) i = i.substring(1); if (-1 !== i.indexOf(e)) return i.substring(e.length + 1, i.length) } return "" }, setCookie: function (e, t, i) { t && t.toString().length > 512 || (i ? document.cookie = e + "=" + t + ";expires=" + i + ";path=/" : document.cookie = e + "=" + t + ";path=/") }, setAndGetCookie: function (e) { var t = this.getCookie(e); return "" === t && (t = this.guid(), this.setCookie(e, t)), t }, setStorageCookie: function (e, t, i, n) { try { "session" === n ? sessionStorage.setItem(e, t) : this.saveToFrame(e, t) } catch (s) { this.setCookie(e, t, i) } }, getStorageCookie: function (e, t) { var i; try { i = "session" === t ? sessionStorage.getItem(e) : localStorage.getItem(e) } catch (n) { } return i || this.getCookie(e) }, getPageViewed: function () { var e, t, i; return e = this.getStorageCookie("ipe." + this.companyId + ".pageViewed", "session"), i = this.getCookie("ipe." + this.companyId + ".pageViewedCount"), t = e ? e.split(",") : [], i = parseInt(i) || 0, location.href !== t[t.length - 1] && (t = [], t.push(location.href), i += 1), e = t.join(","), this.setStorageCookie("ipe." + this.companyId + ".pageViewed", e, null, "session"), this.setCookie("ipe." + this.companyId + ".pageViewedCount", i), i }, getInvites: function () { return this.getIframeSessionStorage("ipe." + this.companyId + ".winning") }, setInvites: function (e) { this.setIframeSessionStorage("ipe." + this.companyId + ".winning", e) }, updateVisit: function (e, t) { for (var i = !1, n = 0; n < this.visits.length && !i; n++) this.visits[n].id === e.id && (this.visits[n] = e, i = !0); i || this.visits.push(e), this.setStorageCookie(this.visitsId, JSON.stringify(this.visits), t) }, objToString: function (e) { var t = ""; for (var i in e) e.hasOwnProperty(i) && (t += i + "::" + e[i] + "\n"); return t }, seed: function () { return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1) }, guid: function () { return this.seed() + this.seed() + "-" + this.seed() + "-" + this.seed() + "-" + this.seed() + "-" + this.seed() + this.seed() + this.seed() }, stringToObj: function (str) { var i, sobj = JSON.parse(str); for (i in sobj) sobj.hasOwnProperty(i) && "string" == typeof sobj[i] && 0 === sobj[i].indexOf("function") && (sobj[i] = eval("(" + sobj[i] + ")")); return sobj }, addEvent: function (e, t) { window.addEventListener ? window.addEventListener(e, t) : window.attachEvent("on" + e, t) }, saveToFrame: function (e, t) { var i = document.getElementById(this.frameId).contentWindow; localStorage.setItem(e, t), i.postMessage(JSON.stringify({ key: e, method: "set", data: t }), "*") }, setIframeSessionStorage: function (e, t) { var i = document.getElementById(this.frameId).contentWindow; this.setStorageCookie(e, t, null, 'session'), i.postMessage(JSON.stringify({ key: e, method: "setsession", data: t }), "*") }, getIframeSessionStorage: function (e, t) { var i = iPerceptions.Wrapper, n = document.getElementById(i.frameId).contentWindow; n.postMessage(JSON.stringify({ key: e, method: "getsession" }), "*"), i.addEvent("message", function (e) { if (e.origin.indexOf(iPerceptions.Wrapper.iFrameUrl) >= 0) { var n = JSON.parse(e.data); "universalgetsession" == n.source && iPerceptions.ipEngine.evaluateRate(t, n.value, ipDef, i.device, i.culture, i.visit, i.sId, i.token) } }) }, saveAndRestoreLocalStorage: function () { var e = iPerceptions.Wrapper, t = document.getElementById(e.frameId).contentWindow; t.postMessage(JSON.stringify({ key: e.visitsId, method: "get" }), "*"), setTimeout(function () { e.init() }, 300) }, storageFromFrame: function () { try { var e = iPerceptions.Wrapper, t = document.createElement("iframe"); t.src = e.frameUrl, t.style.display = "none", t.id = e.frameId; var i = document.getElementsByTagName("body")[0]; i.appendChild(t); var n = e.visitsId; e.afterInjection(t, e.saveAndRestoreLocalStorage), e.addEvent("message", function (t) { if (t.origin.indexOf(iPerceptions.Wrapper.iFrameUrl) >= 0) { var i = JSON.parse(t.data); "universal" == i.source && e.setStorageCookie(n, i.value) } }) } catch (s) { } } }, "complete" == document.readyState ? iPerceptions.Wrapper.storageFromFrame() : iPerceptions.Wrapper.addEvent("load", iPerceptions.Wrapper.storageFromFrame);